// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DirectlyContributionFeeChanged extends ethereum.Event {
  get params(): DirectlyContributionFeeChanged__Params {
    return new DirectlyContributionFeeChanged__Params(this);
  }
}

export class DirectlyContributionFeeChanged__Params {
  _event: DirectlyContributionFeeChanged;

  constructor(event: DirectlyContributionFeeChanged) {
    this._event = event;
  }

  get directlyContributionFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class DonationAdded extends ethereum.Event {
  get params(): DonationAdded__Params {
    return new DonationAdded__Params(this);
  }
}

export class DonationAdded__Params {
  _event: DonationAdded;

  constructor(event: DonationAdded) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nonProfit(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get integrationController(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get donationBatch(): string {
    return this._event.parameters[3].value.toString();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class GovernanceCouncilChanged extends ethereum.Event {
  get params(): GovernanceCouncilChanged__Params {
    return new GovernanceCouncilChanged__Params(this);
  }
}

export class GovernanceCouncilChanged__Params {
  _event: GovernanceCouncilChanged;

  constructor(event: GovernanceCouncilChanged) {
    this._event = event;
  }

  get governanceCouncil(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class IntegrationControllerBalanceAdded extends ethereum.Event {
  get params(): IntegrationControllerBalanceAdded__Params {
    return new IntegrationControllerBalanceAdded__Params(this);
  }
}

export class IntegrationControllerBalanceAdded__Params {
  _event: IntegrationControllerBalanceAdded;

  constructor(event: IntegrationControllerBalanceAdded) {
    this._event = event;
  }

  get integrationController(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class IntegrationControllerBalanceRemoved extends ethereum.Event {
  get params(): IntegrationControllerBalanceRemoved__Params {
    return new IntegrationControllerBalanceRemoved__Params(this);
  }
}

export class IntegrationControllerBalanceRemoved__Params {
  _event: IntegrationControllerBalanceRemoved;

  constructor(event: IntegrationControllerBalanceRemoved) {
    this._event = event;
  }

  get integrationController(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class IntegrationCouncilChanged extends ethereum.Event {
  get params(): IntegrationCouncilChanged__Params {
    return new IntegrationCouncilChanged__Params(this);
  }
}

export class IntegrationCouncilChanged__Params {
  _event: IntegrationCouncilChanged;

  constructor(event: IntegrationCouncilChanged) {
    this._event = event;
  }

  get integrationCouncil(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NonProfitAdded extends ethereum.Event {
  get params(): NonProfitAdded__Params {
    return new NonProfitAdded__Params(this);
  }
}

export class NonProfitAdded__Params {
  _event: NonProfitAdded;

  constructor(event: NonProfitAdded) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nonProfit(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NonProfitCouncilChanged extends ethereum.Event {
  get params(): NonProfitCouncilChanged__Params {
    return new NonProfitCouncilChanged__Params(this);
  }
}

export class NonProfitCouncilChanged__Params {
  _event: NonProfitCouncilChanged;

  constructor(event: NonProfitCouncilChanged) {
    this._event = event;
  }

  get nonProfitCouncil(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NonProfitRemoved extends ethereum.Event {
  get params(): NonProfitRemoved__Params {
    return new NonProfitRemoved__Params(this);
  }
}

export class NonProfitRemoved__Params {
  _event: NonProfitRemoved;

  constructor(event: NonProfitRemoved) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nonProfit(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolBalanceIncreased extends ethereum.Event {
  get params(): PoolBalanceIncreased__Params {
    return new PoolBalanceIncreased__Params(this);
  }
}

export class PoolBalanceIncreased__Params {
  _event: PoolBalanceIncreased;

  constructor(event: PoolBalanceIncreased) {
    this._event = event;
  }

  get promoter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pool(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PoolBalanceTransfered extends ethereum.Event {
  get params(): PoolBalanceTransfered__Params {
    return new PoolBalanceTransfered__Params(this);
  }
}

export class PoolBalanceTransfered__Params {
  _event: PoolBalanceTransfered;

  constructor(event: PoolBalanceTransfered) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get wallet(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolIncreaseFeeChanged extends ethereum.Event {
  get params(): PoolIncreaseFeeChanged__Params {
    return new PoolIncreaseFeeChanged__Params(this);
  }
}

export class PoolIncreaseFeeChanged__Params {
  _event: PoolIncreaseFeeChanged;

  constructor(event: PoolIncreaseFeeChanged) {
    this._event = event;
  }

  get poolIncreaseFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Manager__fetchPoolsResult {
  value0: Array<Address>;
  value1: BigInt;

  constructor(value0: Array<Address>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Manager extends ethereum.SmartContract {
  static bind(address: Address): Manager {
    return new Manager("Manager", address);
  }

  createPool(_token: Address): Address {
    let result = super.call("createPool", "createPool(address):(address)", [
      ethereum.Value.fromAddress(_token)
    ]);

    return result[0].toAddress();
  }

  try_createPool(_token: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("createPool", "createPool(address):(address)", [
      ethereum.Value.fromAddress(_token)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  directlyContributionFee(): BigInt {
    let result = super.call(
      "directlyContributionFee",
      "directlyContributionFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_directlyContributionFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "directlyContributionFee",
      "directlyContributionFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  existPool(param0: Address): boolean {
    let result = super.call("existPool", "existPool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_existPool(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("existPool", "existPool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  feeWallet(): Address {
    let result = super.call("feeWallet", "feeWallet():(address)", []);

    return result[0].toAddress();
  }

  try_feeWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeWallet", "feeWallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fetchPools(_index: BigInt, _length: BigInt): Manager__fetchPoolsResult {
    let result = super.call(
      "fetchPools",
      "fetchPools(uint256,uint256):(address[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_index),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );

    return new Manager__fetchPoolsResult(
      result[0].toAddressArray(),
      result[1].toBigInt()
    );
  }

  try_fetchPools(
    _index: BigInt,
    _length: BigInt
  ): ethereum.CallResult<Manager__fetchPoolsResult> {
    let result = super.tryCall(
      "fetchPools",
      "fetchPools(uint256,uint256):(address[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_index),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Manager__fetchPoolsResult(
        value[0].toAddressArray(),
        value[1].toBigInt()
      )
    );
  }

  governanceCouncil(): Address {
    let result = super.call(
      "governanceCouncil",
      "governanceCouncil():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_governanceCouncil(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "governanceCouncil",
      "governanceCouncil():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  integrationControllers(param0: Address): BigInt {
    let result = super.call(
      "integrationControllers",
      "integrationControllers(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_integrationControllers(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "integrationControllers",
      "integrationControllers(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  integrationCouncil(): Address {
    let result = super.call(
      "integrationCouncil",
      "integrationCouncil():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_integrationCouncil(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "integrationCouncil",
      "integrationCouncil():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nonProfitCouncil(): Address {
    let result = super.call(
      "nonProfitCouncil",
      "nonProfitCouncil():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_nonProfitCouncil(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "nonProfitCouncil",
      "nonProfitCouncil():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolIncreaseFee(): BigInt {
    let result = super.call(
      "poolIncreaseFee",
      "poolIncreaseFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_poolIncreaseFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolIncreaseFee",
      "poolIncreaseFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pools(param0: BigInt): Address {
    let result = super.call("pools", "pools(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_pools(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("pools", "pools(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _governanceCouncil(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _integrationCouncil(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _nonProfitCouncil(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _feeWallet(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _poolIncreaseFee(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _directlyContributionFee(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddIntegrationControllerBalanceCall extends ethereum.Call {
  get inputs(): AddIntegrationControllerBalanceCall__Inputs {
    return new AddIntegrationControllerBalanceCall__Inputs(this);
  }

  get outputs(): AddIntegrationControllerBalanceCall__Outputs {
    return new AddIntegrationControllerBalanceCall__Outputs(this);
  }
}

export class AddIntegrationControllerBalanceCall__Inputs {
  _call: AddIntegrationControllerBalanceCall;

  constructor(call: AddIntegrationControllerBalanceCall) {
    this._call = call;
  }

  get _integrationController(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddIntegrationControllerBalanceCall__Outputs {
  _call: AddIntegrationControllerBalanceCall;

  constructor(call: AddIntegrationControllerBalanceCall) {
    this._call = call;
  }
}

export class AddNonProfitToWhitelistCall extends ethereum.Call {
  get inputs(): AddNonProfitToWhitelistCall__Inputs {
    return new AddNonProfitToWhitelistCall__Inputs(this);
  }

  get outputs(): AddNonProfitToWhitelistCall__Outputs {
    return new AddNonProfitToWhitelistCall__Outputs(this);
  }
}

export class AddNonProfitToWhitelistCall__Inputs {
  _call: AddNonProfitToWhitelistCall;

  constructor(call: AddNonProfitToWhitelistCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _nonProfit(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddNonProfitToWhitelistCall__Outputs {
  _call: AddNonProfitToWhitelistCall;

  constructor(call: AddNonProfitToWhitelistCall) {
    this._call = call;
  }
}

export class AddPoolBalanceCall extends ethereum.Call {
  get inputs(): AddPoolBalanceCall__Inputs {
    return new AddPoolBalanceCall__Inputs(this);
  }

  get outputs(): AddPoolBalanceCall__Outputs {
    return new AddPoolBalanceCall__Outputs(this);
  }
}

export class AddPoolBalanceCall__Inputs {
  _call: AddPoolBalanceCall;

  constructor(call: AddPoolBalanceCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get feeable(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class AddPoolBalanceCall__Outputs {
  _call: AddPoolBalanceCall;

  constructor(call: AddPoolBalanceCall) {
    this._call = call;
  }
}

export class ContributeToNonProfitCall extends ethereum.Call {
  get inputs(): ContributeToNonProfitCall__Inputs {
    return new ContributeToNonProfitCall__Inputs(this);
  }

  get outputs(): ContributeToNonProfitCall__Outputs {
    return new ContributeToNonProfitCall__Outputs(this);
  }
}

export class ContributeToNonProfitCall__Inputs {
  _call: ContributeToNonProfitCall;

  constructor(call: ContributeToNonProfitCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _nonProfit(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ContributeToNonProfitCall__Outputs {
  _call: ContributeToNonProfitCall;

  constructor(call: ContributeToNonProfitCall) {
    this._call = call;
  }
}

export class CreatePoolCall extends ethereum.Call {
  get inputs(): CreatePoolCall__Inputs {
    return new CreatePoolCall__Inputs(this);
  }

  get outputs(): CreatePoolCall__Outputs {
    return new CreatePoolCall__Outputs(this);
  }
}

export class CreatePoolCall__Inputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreatePoolCall__Outputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class DonateThroughIntegrationCall extends ethereum.Call {
  get inputs(): DonateThroughIntegrationCall__Inputs {
    return new DonateThroughIntegrationCall__Inputs(this);
  }

  get outputs(): DonateThroughIntegrationCall__Outputs {
    return new DonateThroughIntegrationCall__Outputs(this);
  }
}

export class DonateThroughIntegrationCall__Inputs {
  _call: DonateThroughIntegrationCall;

  constructor(call: DonateThroughIntegrationCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _nonProfit(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _integrationController(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _donation_batch(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _amount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class DonateThroughIntegrationCall__Outputs {
  _call: DonateThroughIntegrationCall;

  constructor(call: DonateThroughIntegrationCall) {
    this._call = call;
  }
}

export class RemoveIntegrationControllerBalanceCall extends ethereum.Call {
  get inputs(): RemoveIntegrationControllerBalanceCall__Inputs {
    return new RemoveIntegrationControllerBalanceCall__Inputs(this);
  }

  get outputs(): RemoveIntegrationControllerBalanceCall__Outputs {
    return new RemoveIntegrationControllerBalanceCall__Outputs(this);
  }
}

export class RemoveIntegrationControllerBalanceCall__Inputs {
  _call: RemoveIntegrationControllerBalanceCall;

  constructor(call: RemoveIntegrationControllerBalanceCall) {
    this._call = call;
  }

  get _integrationController(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveIntegrationControllerBalanceCall__Outputs {
  _call: RemoveIntegrationControllerBalanceCall;

  constructor(call: RemoveIntegrationControllerBalanceCall) {
    this._call = call;
  }
}

export class RemoveNonProfitFromWhitelistCall extends ethereum.Call {
  get inputs(): RemoveNonProfitFromWhitelistCall__Inputs {
    return new RemoveNonProfitFromWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveNonProfitFromWhitelistCall__Outputs {
    return new RemoveNonProfitFromWhitelistCall__Outputs(this);
  }
}

export class RemoveNonProfitFromWhitelistCall__Inputs {
  _call: RemoveNonProfitFromWhitelistCall;

  constructor(call: RemoveNonProfitFromWhitelistCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _nonProfit(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveNonProfitFromWhitelistCall__Outputs {
  _call: RemoveNonProfitFromWhitelistCall;

  constructor(call: RemoveNonProfitFromWhitelistCall) {
    this._call = call;
  }
}

export class SetDirectlyContributionFeeCall extends ethereum.Call {
  get inputs(): SetDirectlyContributionFeeCall__Inputs {
    return new SetDirectlyContributionFeeCall__Inputs(this);
  }

  get outputs(): SetDirectlyContributionFeeCall__Outputs {
    return new SetDirectlyContributionFeeCall__Outputs(this);
  }
}

export class SetDirectlyContributionFeeCall__Inputs {
  _call: SetDirectlyContributionFeeCall;

  constructor(call: SetDirectlyContributionFeeCall) {
    this._call = call;
  }

  get _directlyContributionFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDirectlyContributionFeeCall__Outputs {
  _call: SetDirectlyContributionFeeCall;

  constructor(call: SetDirectlyContributionFeeCall) {
    this._call = call;
  }
}

export class SetGovernanceCouncilCall extends ethereum.Call {
  get inputs(): SetGovernanceCouncilCall__Inputs {
    return new SetGovernanceCouncilCall__Inputs(this);
  }

  get outputs(): SetGovernanceCouncilCall__Outputs {
    return new SetGovernanceCouncilCall__Outputs(this);
  }
}

export class SetGovernanceCouncilCall__Inputs {
  _call: SetGovernanceCouncilCall;

  constructor(call: SetGovernanceCouncilCall) {
    this._call = call;
  }

  get _governanceCouncil(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovernanceCouncilCall__Outputs {
  _call: SetGovernanceCouncilCall;

  constructor(call: SetGovernanceCouncilCall) {
    this._call = call;
  }
}

export class SetIntegrationCouncilCall extends ethereum.Call {
  get inputs(): SetIntegrationCouncilCall__Inputs {
    return new SetIntegrationCouncilCall__Inputs(this);
  }

  get outputs(): SetIntegrationCouncilCall__Outputs {
    return new SetIntegrationCouncilCall__Outputs(this);
  }
}

export class SetIntegrationCouncilCall__Inputs {
  _call: SetIntegrationCouncilCall;

  constructor(call: SetIntegrationCouncilCall) {
    this._call = call;
  }

  get _integrationCouncil(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetIntegrationCouncilCall__Outputs {
  _call: SetIntegrationCouncilCall;

  constructor(call: SetIntegrationCouncilCall) {
    this._call = call;
  }
}

export class SetNonProfitCouncilCall extends ethereum.Call {
  get inputs(): SetNonProfitCouncilCall__Inputs {
    return new SetNonProfitCouncilCall__Inputs(this);
  }

  get outputs(): SetNonProfitCouncilCall__Outputs {
    return new SetNonProfitCouncilCall__Outputs(this);
  }
}

export class SetNonProfitCouncilCall__Inputs {
  _call: SetNonProfitCouncilCall;

  constructor(call: SetNonProfitCouncilCall) {
    this._call = call;
  }

  get _nonProfitCouncil(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNonProfitCouncilCall__Outputs {
  _call: SetNonProfitCouncilCall;

  constructor(call: SetNonProfitCouncilCall) {
    this._call = call;
  }
}

export class SetPoolIncreaseFeeCall extends ethereum.Call {
  get inputs(): SetPoolIncreaseFeeCall__Inputs {
    return new SetPoolIncreaseFeeCall__Inputs(this);
  }

  get outputs(): SetPoolIncreaseFeeCall__Outputs {
    return new SetPoolIncreaseFeeCall__Outputs(this);
  }
}

export class SetPoolIncreaseFeeCall__Inputs {
  _call: SetPoolIncreaseFeeCall;

  constructor(call: SetPoolIncreaseFeeCall) {
    this._call = call;
  }

  get _poolIncreaseFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPoolIncreaseFeeCall__Outputs {
  _call: SetPoolIncreaseFeeCall;

  constructor(call: SetPoolIncreaseFeeCall) {
    this._call = call;
  }
}

export class TransferPoolBalanceCall extends ethereum.Call {
  get inputs(): TransferPoolBalanceCall__Inputs {
    return new TransferPoolBalanceCall__Inputs(this);
  }

  get outputs(): TransferPoolBalanceCall__Outputs {
    return new TransferPoolBalanceCall__Outputs(this);
  }
}

export class TransferPoolBalanceCall__Inputs {
  _call: TransferPoolBalanceCall;

  constructor(call: TransferPoolBalanceCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _wallet(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TransferPoolBalanceCall__Outputs {
  _call: TransferPoolBalanceCall;

  constructor(call: TransferPoolBalanceCall) {
    this._call = call;
  }
}
