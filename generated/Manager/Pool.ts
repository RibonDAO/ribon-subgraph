// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BalanceIncreased extends ethereum.Event {
  get params(): BalanceIncreased__Params {
    return new BalanceIncreased__Params(this);
  }
}

export class BalanceIncreased__Params {
  _event: BalanceIncreased;

  constructor(event: BalanceIncreased) {
    this._event = event;
  }

  get promoter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BalanceTransfered extends ethereum.Event {
  get params(): BalanceTransfered__Params {
    return new BalanceTransfered__Params(this);
  }
}

export class BalanceTransfered__Params {
  _event: BalanceTransfered;

  constructor(event: BalanceTransfered) {
    this._event = event;
  }

  get wallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DonationAdded extends ethereum.Event {
  get params(): DonationAdded__Params {
    return new DonationAdded__Params(this);
  }
}

export class DonationAdded__Params {
  _event: DonationAdded;

  constructor(event: DonationAdded) {
    this._event = event;
  }

  get user(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get integration(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get nonProfit(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class NonProfitAdded extends ethereum.Event {
  get params(): NonProfitAdded__Params {
    return new NonProfitAdded__Params(this);
  }
}

export class NonProfitAdded__Params {
  _event: NonProfitAdded;

  constructor(event: NonProfitAdded) {
    this._event = event;
  }

  get nonProfit(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NonProfitRemoved extends ethereum.Event {
  get params(): NonProfitRemoved__Params {
    return new NonProfitRemoved__Params(this);
  }
}

export class NonProfitRemoved__Params {
  _event: NonProfitRemoved;

  constructor(event: NonProfitRemoved) {
    this._event = event;
  }

  get nonProfit(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Pool extends ethereum.SmartContract {
  static bind(address: Address): Pool {
    return new Pool("Pool", address);
  }

  manager(): Address {
    let result = super.call("manager", "manager():(address)", []);

    return result[0].toAddress();
  }

  try_manager(): ethereum.CallResult<Address> {
    let result = super.tryCall("manager", "manager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nonProfits(param0: Address): boolean {
    let result = super.call("nonProfits", "nonProfits(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_nonProfits(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("nonProfits", "nonProfits(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _manager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddNonProfitToWhitelistCall extends ethereum.Call {
  get inputs(): AddNonProfitToWhitelistCall__Inputs {
    return new AddNonProfitToWhitelistCall__Inputs(this);
  }

  get outputs(): AddNonProfitToWhitelistCall__Outputs {
    return new AddNonProfitToWhitelistCall__Outputs(this);
  }
}

export class AddNonProfitToWhitelistCall__Inputs {
  _call: AddNonProfitToWhitelistCall;

  constructor(call: AddNonProfitToWhitelistCall) {
    this._call = call;
  }

  get _nonProfit(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddNonProfitToWhitelistCall__Outputs {
  _call: AddNonProfitToWhitelistCall;

  constructor(call: AddNonProfitToWhitelistCall) {
    this._call = call;
  }
}

export class DonateThroughIntegrationCall extends ethereum.Call {
  get inputs(): DonateThroughIntegrationCall__Inputs {
    return new DonateThroughIntegrationCall__Inputs(this);
  }

  get outputs(): DonateThroughIntegrationCall__Outputs {
    return new DonateThroughIntegrationCall__Outputs(this);
  }
}

export class DonateThroughIntegrationCall__Inputs {
  _call: DonateThroughIntegrationCall;

  constructor(call: DonateThroughIntegrationCall) {
    this._call = call;
  }

  get _nonProfit(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _integration(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _user(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DonateThroughIntegrationCall__Outputs {
  _call: DonateThroughIntegrationCall;

  constructor(call: DonateThroughIntegrationCall) {
    this._call = call;
  }
}

export class RemoveNonProfitFromWhitelistCall extends ethereum.Call {
  get inputs(): RemoveNonProfitFromWhitelistCall__Inputs {
    return new RemoveNonProfitFromWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveNonProfitFromWhitelistCall__Outputs {
    return new RemoveNonProfitFromWhitelistCall__Outputs(this);
  }
}

export class RemoveNonProfitFromWhitelistCall__Inputs {
  _call: RemoveNonProfitFromWhitelistCall;

  constructor(call: RemoveNonProfitFromWhitelistCall) {
    this._call = call;
  }

  get _nonProfit(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveNonProfitFromWhitelistCall__Outputs {
  _call: RemoveNonProfitFromWhitelistCall;

  constructor(call: RemoveNonProfitFromWhitelistCall) {
    this._call = call;
  }
}

export class TransferBalanceCall extends ethereum.Call {
  get inputs(): TransferBalanceCall__Inputs {
    return new TransferBalanceCall__Inputs(this);
  }

  get outputs(): TransferBalanceCall__Outputs {
    return new TransferBalanceCall__Outputs(this);
  }
}

export class TransferBalanceCall__Inputs {
  _call: TransferBalanceCall;

  constructor(call: TransferBalanceCall) {
    this._call = call;
  }

  get _wallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferBalanceCall__Outputs {
  _call: TransferBalanceCall;

  constructor(call: TransferBalanceCall) {
    this._call = call;
  }
}
